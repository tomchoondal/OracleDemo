<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conve="clr-namespace:OracleCommunication_Demo.Converters"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" mc:Ignorable="d"
        x:Class="OracleCommunication_Demo.UserControls.HomeButtonControl" x:Name="UserControl" d:DesignWidth="500"
        d:DesignHeight="500">
    <UserControl.Resources>
        <Style x:Key="HomeButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" SnapsToDevicePixels="true" Background="{TemplateBinding Background}"
                                CornerRadius="80" BorderThickness="3" BorderBrush="#FF81BB5F">
                            <Border.Effect>
                                <DropShadowEffect Direction="278" ShadowDepth="2" Opacity="0.7" BlurRadius="5" />
                            </Border.Effect>
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true" />
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White" />
        </Style>
        <Style x:Key="HomeChatButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true" />
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White" />
        </Style>
        <Storyboard x:Key="CheckedState">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                    Storyboard.TargetName="Sidepart">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                    Storyboard.TargetName="TopPart">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                    Storyboard.TargetName="TopPart">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                    Storyboard.TargetName="TopPart">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-95" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                    Storyboard.TargetName="Sidepart">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                    Storyboard.TargetName="Sidepart">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-52" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="UncheckedState">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                    Storyboard.TargetName="Sidepart">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                    Storyboard.TargetName="Sidepart">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                    Storyboard.TargetName="Sidepart">
                <EasingDoubleKeyFrame KeyTime="0" Value="-52" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                    Storyboard.TargetName="TopPart">
                <EasingDoubleKeyFrame KeyTime="0" Value="-95" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                    Storyboard.TargetName="TopPart">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                    Storyboard.TargetName="TopPart">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowNotification">
            <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                    Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                    Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                    Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HideNotification">
            <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                    Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                    Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                    Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot" Height="130">
        <Border x:Name="Sidepart" VerticalAlignment="Bottom" HorizontalAlignment="Right" MinWidth="80"
                RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" Opacity="0" Margin="0,0,0,15"
                Style="{DynamicResource ControlBorderStyle}">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform X="0" />
                </TransformGroup>
            </Border.RenderTransform>
            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                <ToggleButton HorizontalAlignment="Left" Style="{DynamicResource PlayPauseButton}" Margin="0,0,12,0"
                        IsChecked="{Binding BasicGuidanceVM.IsAudioPaused,Source={StaticResource MainVM}}"
                        x:Name="PlayPauseButton"
                        Visibility="{Binding BasicGuidanceVM.HasAudio,Source={StaticResource MainVM},Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button HorizontalAlignment="Left" Style="{DynamicResource HomeInnerButtonStyle}" Margin="0,0,24,0"
                        Click="Button_Click">
                    <Image Source="/OracleCommunication_Demo;component/Images/Quit.png" Height="32" />
                </Button>
            </StackPanel>
        </Border>
        <Border x:Name="TopPart" HorizontalAlignment="Right" Width="78" CornerRadius="8"
                Background="{DynamicResource LightBlue}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom"
                Visibility="Collapsed" Opacity="0">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Border.RenderTransform>
            <Border.Effect>
                <DropShadowEffect ShadowDepth="0" Opacity="0.7" BlurRadius="7" />
            </Border.Effect>
            <Grid Margin="10"
                    Visibility="{Binding BasicGuidanceVM.IsChatMinimized, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource MainVM}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Text="Lauren" FontSize="10.667" FontFamily="{DynamicResource DefaultFont}" FontWeight="Light"
                        VerticalAlignment="Bottom" Margin="0,0,0,5" />
                <Rectangle Fill="#FFCCCCCC" VerticalAlignment="Top" Height="1" StrokeThickness="0" Grid.Row="1" />
                <Rectangle Fill="#FFCCCCCC" VerticalAlignment="Bottom" Height="1" Grid.Row="1" StrokeThickness="0" />
                <Grid Grid.Row="2">
                    <Button HorizontalAlignment="Center" VerticalAlignment="Center" Height="39" Margin="0,5"
                            Style="{StaticResource HomeInnerButtonStyle}" Click="Button_Click_1">
                        <Image Source="/OracleCommunication_Demo;component/Images/ChatActive.png" />
                    </Button>
                    <Border x:Name="border" HorizontalAlignment="Right" VerticalAlignment="Top" Width="12" Height="12"
                            CornerRadius="15" Background="#FFFF0101" Margin="0,3,10,0" RenderTransformOrigin="0.5,0.5"
                            Opacity="0">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0" ScaleY="0" />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <TextBlock TextWrapping="Wrap" Text="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                FontFamily="{DynamicResource DefaultFont}" Foreground="White" FontSize="8" />
                    </Border>
                </Grid>
                <StackPanel Grid.Row="1" Margin="0,5,0,5" Orientation="Horizontal"
                        Visibility="{Binding BasicGuidanceVM.HasAudio, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource MainVM}}">
                    <Grid>
                        <Image Source="/OracleCommunication_Demo;component/Images/AudioSymbol.png" Height="11"
                                Stretch="Uniform"
                                Visibility="{Binding BasicGuidanceVM.HasAudio,Source={StaticResource MainVM},Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Image Source="/OracleCommunication_Demo;component/Images/ChatSymbol.png" Height="11"
                                Stretch="Uniform"
                                Visibility="{Binding BasicGuidanceVM.HasAudio,Source={StaticResource MainVM},Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter=Inverse}" />
                    </Grid>
                    <TextBlock Text="{Binding TimerVM.CurrentTime,Source={StaticResource MainVM}}" Margin="3,0,0,0"
                            FontFamily="{DynamicResource DefaultFont}" FontSize="18" FontWeight="Light" />
                </StackPanel>
            </Grid>
        </Border>
        <ToggleButton Style="{DynamicResource HomeButtonStyle}" Width="80" Height="80"
                IsChecked="{Binding BasicGuidanceVM.IsControlOpened,Source={StaticResource MainVM}}"
                VerticalAlignment="Bottom" HorizontalAlignment="Right">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Checked">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource CheckedState}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="Unchecked">
                    <ei:ControlStoryboardAction Storyboard="{StaticResource UncheckedState}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Image Source="/OracleCommunication_Demo;component/Images/Home_User.png" Stretch="Uniform" />
        </ToggleButton>
        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,22,12" IsHitTestVisible="False">
            <Grid
                    Visibility="{Binding BasicGuidanceVM.HasAudio,Source={StaticResource MainVM},Converter={StaticResource BooleanToVisibilityConverter}}">
                <Image x:Name="AudioActiveImage" HorizontalAlignment="Left" VerticalAlignment="Top"
                        Source="/OracleCommunication_Demo;component/Images/Audio_Active.png" Height="18"
                        Visibility="{Binding BasicGuidanceVM.IsAudioPaused,Source={StaticResource MainVM},Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter=Inverse}" />
                <Image x:Name="AudioDeactivateImage"
                        Source="/OracleCommunication_Demo;component/Images/Audio_Deactive.png" Height="18"
                        Visibility="{Binding BasicGuidanceVM.IsAudioPaused,Source={StaticResource MainVM},Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <Image Source="/OracleCommunication_Demo;component/Images/Chat_Small.png" Height="15"
                    Visibility="{Binding BasicGuidanceVM.HasAudio,Source={StaticResource MainVM},Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter=Inverse}" />
        </Grid>
    </Grid>
</UserControl>